<?xml version="1.0" encoding="UTF-8"?>

<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->

<model xmlns="http://modello.codehaus.org/MODELLO/1.1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://modello.codehaus.org/MODELLO/1.0.0 http://modello.codehaus.org/xsd/modello-1.0.0.xsd"
       xsd.namespace="http://mojo.codehaus.org/versions-maven-plugin/rule/1.0.0"
       xsd.targetNamespace="http://mojo.codehaus.org/versions-maven-plugin/rule/1.0.0">
  <id>rule</id>
  <name>Rule</name>
  <description>
    A collection of version number comparison rules.
  </description>
  <defaults>
    <default>
      <key>package</key>
      <value>org.codehaus.mojo.versions.model</value>
    </default>
  </defaults>
  <versionDefinition>
    <type>namespace</type>
  </versionDefinition>
  <classes>
    <class xml.tagName="rule">
      <name>Rule</name>
      <description>
        Describes a rule for how versions of artifacts should be handled.
      </description>
      <version>1.0+</version>
      <fields>
        <field xml.attribute="true">
          <name>groupId</name>
          <version>1.0+</version>
          <required>true</required>
          <type>String</type>
          <description>
            The for groupId to which this rule applies. Wildcards with ? and * are valid.
            A rule applies to all child groupIds unless overridden by a subsequent rule.
            A rule without wildcards will override a rule with wildcards.
            A rule with ? wildcards will override a rule with * wildcards.
          </description>
        </field>
        <field xml.attribute="true">
          <name>artifactId</name>
          <version>1.0+</version>
          <required>false</required>
          <type>String</type>
          <description>
            The artifactId to which this rule applies. Wildcards with ? and * are valid.
            A rule without wildcards will override a rule with wildcards.
            A rule with ? wildcards will override a rule with * wildcards.
          </description>
        </field>
        <field xml.attribute="true">
          <name>comparisonMethod</name>
          <version>1.0+</version>
          <required>true</required>
          <type>String</type>
          <description>The comparison method that this rule specifies.</description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0+</version>
          <code><![CDATA[
    /**
     * Creates a new empty rule.
     */
    public Rule()
    {
        // enables no-arg construction
        artifactId = "*";
        comparisonMethod = "maven";
    }

          ]]></code>
        </codeSegment>
        <codeSegment>
          <version>1.0+</version>
          <code><![CDATA[
    public String toString()
    {
        StringBuffer buf = new StringBuffer( 128 );
        buf.append( "Rule[groupId = \"" );
        buf.append( groupId );
        buf.append( "\", artifactId = \"" );
        buf.append( artifactId );
        buf.append( "\", comparisonMethod = \"" );
        buf.append( comparisonMethod );
        buf.append( "\"]" );
        return buf.toString();
    }
          ]]></code>
        </codeSegment>
      </codeSegments>
    </class>
    <class rootElement="true" xml.tagName="ruleset">
      <name>RuleSet</name>
      <description>
        Describes a set of rules for how versions of artifacts should be handled.
      </description>
      <version>1.0+</version>
      <fields>
        <field>
          <name>rules</name>
          <required>true</required>
          <version>1.0+</version>
          <association xml.itemStyle="flat">
            <type>Rule</type>
            <multiplicity>*</multiplicity>
          </association>
        </field>
        <field xml.attribute="true">
          <name>comparisonMethod</name>
          <version>1.0+</version>
          <required>true</required>
          <type>String</type>
          <description>The comparison method to use when no rule matches.</description>
        </field>
      </fields>
      <codeSegments>
        <codeSegment>
          <version>1.0+</version>
          <code><![CDATA[
    /**
     * Creates a new empty rule set.
     */
    public RuleSet()
    {
        // enables no-arg construction
        comparisonMethod = "maven";
    }

          ]]></code>
        </codeSegment>
        <codeSegment>
          <version>1.0+</version>
          <code><![CDATA[
    public String toString()
    {
        StringBuffer buf = new StringBuffer( 128 );
        buf.append( "RuleSet[rules = " );
        buf.append( rules );
        buf.append( ", comparisonMethod = \"" );
        buf.append( comparisonMethod );
        buf.append( "\"]" );
        return buf.toString();
    }
          ]]></code>
        </codeSegment>
      </codeSegments>
    </class>
  </classes>
</model>