 ------
 Introduction
 ------
 Pete Marvin King
 ------
 27 June 2006
 ------
 
~~ Copyright 2006 The Apache Software Foundation.
~~
~~ Licensed under the Apache License, Version 2.0 (the "License");
~~ you may not use this file except in compliance with the License.
~~ You may obtain a copy of the License at
~~
~~      http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing, software
~~ distributed under the License is distributed on an "AS IS" BASIS,
~~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
~~ See the License for the specific language governing permissions and
~~ limitations under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/guides/mini/guide-apt-format.html

Sakai Component Plugin 

 The Sakai Component Plugin is almost a straight copy of
 the Maven WAR Plugin, except that it conencts to the <packaging>sakai-component</packaging> packaging type

 The war plugin is responsible for collecting all artifact dependencies, classes
 and resources of the web application and packaging them into a web application archive.
 
* Goals Overview

 * {{{war-mojo.html}sakai-component:war}} is the default goal invoked during the package phase for projects with a package type of war.
 
 * {{{exploded-mojo.html}sakai-component:exploded}} is generally used to speed up testing during the developement phase by creating
 an exploded war in a specified directory.    
 
 * {{{inplace-mojo.html}sakai-component:inplace}} another variation of the war:explode where the war is instead generated in the web source directory
 which is <<<src/main/webapp>>> by default.
 
 * {{{deploy-mojo.html}sakai-component:deploy}} deploys the component in maven.tomcat.home/components/artifactid as an exploded subtree ready for
 the sakai component manager to load.

* Usage

  Instructions on how to use the Maven WAR Plugin can be found {{{usage.html}here}}.

* Examples
 
 To provide you with better understanding on some usages of the Maven WAR Plugin,
 you can take a look into the following examples:
 
 * {{{examples/adding-filtering-webresources.html}Adding and Filtering External Web Resources}}
 
 * {{{examples/war-overlay.html}Manipulating WAR Overlays}}
 
 * {{{examples/war-manifest-guide.html}War Manifest Customization}}

 * {{{examples/rapid-testing-jetty6-plugin.html}Rapid Testing Using Jetty6}}

 * {{{examples/skinny-wars.html}Creating Skinny WARs}}
 
* Related links
 
  * {{{http://maven.apache.org/guides/mini/guide-archive-configuration.html}Exclusion of Maven Descriptors}}
 
Sakai Configuration Plugin 

 The Sakai Configuration Plugin is plugin that packages a project in zip form and then deploys it to the configation area of the container.
 It conencts to the <packaging>sakai-configuration</packaging> packaging type

 This plugin only packages the build output and deploys it into the target unpacked. It does not overwrite files that already exist in the target space.
 
* Goals Overview

 * {{{war-mojo.html}sakai-configuration:zip}} is the default goal invoked during the package phase for projects with a package type of zip.
  
 * {{{deploy-mojo.html}sakai-configuration:deploy}} deploys the configuration into the app server.
 